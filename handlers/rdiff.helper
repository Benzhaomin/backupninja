HELPERS="$HELPERS rdiff:incremental_remote_filesystem_backup"

declare -a rdiff_includes
declare -a rdiff_excludes

do_rdiff_dest() {
  set -o noglob
  formBegin "rdiff action wizard"
    formItem "keep" "$rdiff_keep"
    formItem "dest_directory" "$rdiff_directory"
    formItem "dest_host" "$rdiff_host"
    formItem "dest_user" "$rdiff_user"
  formDisplay
  [ $? = 0 ] || return

  IFS=$''
  replyconverted=`echo $REPLY | tr '\n' :`
  IFS=$':'
  thereply=($replyconverted)
  IFS=$' \t\n'
  
  rdiff_keep=${thereply[0]}
  rdiff_directory=${thereply[1]}
  rdiff_host=${thereply[2]}
  rdiff_user=${thereply[3]}

  _dest_done="(DONE)"
  setDefault conn
  set +o noglob
}

do_rdiff_src() {
  #echo ${rdiff_includes[@]}
  set -o noglob
  formBegin "rdiff action wizard: includes"
    for ((i=0; i < ${#rdiff_includes[@]} ; i++)); do
       formItem include ${rdiff_includes[$i]}
    done
    formItem include 
    formItem include 
    formItem include 
  formDisplay
  [ $? = 0 ] || return

  unset rdiff_includes
  rdiff_includes=($REPLY)

  formBegin "rdiff action wizard: excludes" 
    for ((i=0; i < ${#rdiff_excludes[@]} ; i++)); do
       formItem exclude ${rdiff_excludes[$i]}
    done
    formItem exclude 
    formItem exclude 
  formDisplay
  [ $? = 0 ] || return

  unset rdiff_excludes
  rdiff_excludes=($REPLY)
   
  _src_done="(DONE)"
  setDefault dest
  set +o noglob
}

do_ssh_con() {
  IFS=$' \t\n'
  if [ "$_dest_done" = "" ]; then
    msgBox "rdiff action wizard: error" "You must first configure the destination."
    return
  elif [ "$rdiff_user" = "" ]; then
    msgBox "rdiff action wizard: error" "You must first configure the destination user."
    return
  elif [ "$rdiff_host" = "" ]; then
    msgBox "rdiff action wizard: error" "You must first configure the destination host."
    return
  else
    booleanBox "rdiff action wizard" "This step will create a ssh key for the local root user with no passphrase (if one does not already exist), and attempt to copy root's public ssh key to authorized_keys file of $rdiff_user@$rdiff_host. This will allow the local root to make unattended backups to $rdiff_user@$rdiff_host.\n\n\nAre you sure you want to continue?"
    [ $? = 0 ] || return
  fi

  if [ ! -f /root/.ssh/id_dsa.pub -a ! -f /root/.ssh/id_rsa.pub ]; then
    echo "Creating local root's ssh key"
    ssh-keygen -t dsa -f /root/.ssh/id_dsa -N ""
    echo "Done. hit return to continue"
    read
  fi
  
  ssh -o PreferredAuthentications=publickey $rdiff_host -l $rdiff_user "exit" 2> /dev/null
  if [ $? -ne 0 ]; then
    echo "Copying root's public ssh key to authorized_keys of $rdiff_user@$rdiff_host. When prompted, specify the password for user $rdiff_user@$rdiff_host."
    ssh-copy-id -i /root/.ssh/id_[rd]sa.pub $rdiff_user@$rdiff_host
    if [ $? -ne 0 ]; then
      echo "FAILED: Couldn't copy root's public ssh key to authorized_keys of $rdiff_user@$rdiff_host."
      ssh $rdiff_user@$rdiff_host 'test -w .ssh || test -w .'
      result=$?
      echo "Hit return to continue."
      read
      case $result in
        0 )   msgBox "rdiff action wizard: error" "Directories are writable: Probably just a typo the first time." ;;
        1 )   msgBox "rdiff action wizard: error" "Connected successfully to $rdiff_user@$rdiff_host, but unable to write. Check ownership and modes of ~$rdiff_user on $rdiff_host." ;;
        255 ) msgBox "rdiff action wizard: error" "Failed to connect to $rdiff_user@$rdiff_host. Check hostname, username, and password. Also, make sure sshd is running on the destination host." ;;
        * )   msgBox "rdiff action wizard: error" "Unexpected error." ;;
      esac 
      return
    else
      echo "Done. hit return to continue"
      read
    fi
  else
    echo "root@localhost is already in authorized_keys of $rdiff_user@$rdiff_host."
    echo "Hit return to continue."
    read
  fi
  # test to see if the remote rdiff backup directory exists and is writable
  echo "Testing to see if remote rdiff backup directory exists and is writable"
  ssh $rdiff_user@$rdiff_host "test -d ${rdiff_directory}"
  if [ $? -eq 0 ]
  then
  	ssh $rdiff_user@$rdiff_host "test -w $rdiff_directory"
  	if [ $? -ne 0 ]
 	then
		msgBox "destination directory is not writable!" "The remote destination directory is not writable by the user you specified. Please fix the permissions on the directory and then try again."
		remote_status=1
	else
		remote_status=0
  	fi
  else
	booleanBox "Remote directory does not exist" "The destination backup directory does not exist, do you want me to create it for you?"
	if [ $? = 0 ]
  	then
		ssh $rdiff_user@$rdiff_host "mkdir -p ${rdiff_directory}"
		result=$?
		echo "Hit return to continue."
		read
		case $result in
			0)   
				msgBox "rdiff action wizard: success" "Creation of the remote destination directory was a success!" 
				remote_status=0
			;;
			1)   
				msgBox "rdiff action wizard: error" "Connected successfully to $rdiff_user@$rdiff_host, but was unable to create the destination directory, check the directory permissions." 
				remote_status=1
			;;
			255) 
				msgBox "rdiff action wizard: error" "Failed to connect to $rdiff_user@$rdiff_host. Check hostname, username, and password. Also, make sure sshd is running on the destination host." 
				remote_status=1
			;;
			*)   
				msgBox "rdiff action wizard: error" "Unexpected error." 
				remote_status=1
			;;
			esac 
			return
	  fi
  fi
  
  if [ $remote_status -ne 1 ]
  then
	do_rdiff_con
  fi
}

do_rdiff_con() {
  echo "Testing to make sure destination has rdiff-backup installed and is compatible."
  remote_result=`/usr/bin/rdiff-backup --test-server $rdiff_user@$rdiff_host::/ 2>&1 >&-`
  if [ $? -ne 0 ]
  then
  	echo $remote_result | grep -q "command not found"
	if [ $? -eq 0 ]
	then
		if [ "$rdiff_user" = "root" ]
		then
			booleanBox "install rdiff-backup?" "It seems like the remote machine does not have rdiff-backup installed, I can attempt to install rdiff-backup on the remote machine.\n\n\nDo you want me to attempt this now?"
    			if [ $? = 0 ] 
			then
       				ssh $rdiff_user@$rdiff_host 'apt-get install rdiff-backup'
 				result=$?
				echo "Hit return to continue."
				read
				case $result in
					0)   
						msgBox "rdiff action wizard: success" "Installation of rdiff-backup was a success!" 
						do_rdiff_con
					;;
					1)   
						msgBox "rdiff action wizard: error" "Connected successfully to $rdiff_user@$rdiff_host, but was unable to install the package for some reason." 
					;;
					255) 
						msgBox "rdiff action wizard: error" "Failed to connect to $rdiff_user@$rdiff_host. Check hostname, username, and password. Also, make sure sshd is running on the destination host." 
					;;
					*)   
						msgBox "rdiff action wizard: error" "Unexpected error." 
					;;
				esac 
				return
     			fi
		else
			booleanBox "install rdiff-backup" "Please install rdiff-backup on the remote machine, this cannot be done automatically, as the remote user in your configuration is not root. \n\nIf you have installed rdiff-backup on the remote machine and you are getting this error, then there is a version incompatibility between that version and the local version.\n\nPlease resolve this problem and then try connecting again.\n\n\n\nTry connecting again?"
			if [ $? = 0 ]
			then
				do_rdiff_con
			else
				return
			fi
		fi
	else
		msgBox "incompatible versions of rdiff-backup" "It looks like rdiff-backup is installed on the remote machine, but it may be an incompatible version with the one installed locally, or something else is amiss.\n\nPlease resolve this problem and then try connecting again.\n\n\nTry connecting again?"
		if [ $? = 0 ]
		then
			do_rdiff_con
		else
			return
		fi
    	fi
   else
 	echo "SUCCESS: Everything looks good!"
	echo "Hit return to continue."
	read
   fi

  _con_done="(DONE)"
  setDefault finish
}

do_rdiff_finish() {
   get_next_filename $configdirectory/90.rdiff
   cat > $next_filename <<EOF
# options = --force
# when = everyday at 02

[source]
type = local
keep = $rdiff_keep
EOF
    set -o noglob
    for ((i=0; i < ${#rdiff_includes[@]} ; i++)); do
        echo "include = ${rdiff_includes[$i]}" >> $next_filename
    done
    for ((i=0; i < ${#rdiff_excludes[@]} ; i++)); do
        echo exclude = ${rdiff_excludes[$i]} >> $next_filename
    done
    set +o noglob
    cat >> $next_filename <<EOF
  
[dest]
type = remote
directory = $rdiff_directory
host = $rdiff_host
user = $rdiff_user
EOF
   chmod 600 $next_filename
}

rdiff_main_menu() {

  while true; do
    srcitem="choose files to include & exclude $_src_done"
    destitem="configure backup destination $_dest_done"
    conitem="set up ssh keys and test remote connection $_con_done"
    advitem="edit advanced settings $_adv_done"
    menuBox "rdiff action wizard" "choose a step:" \
        src "$srcitem" \
        dest "$destitem" \
        conn "$conitem" \
        finish "finish and create config file"
    [ $? = 0 ] || return
    result="$REPLY"

    case "$result" in
       "src") do_rdiff_src;;
       "dest") do_rdiff_dest;;
       "conn") do_ssh_con;;
       "adv") do_rdiff_adv;;
       "finish")
          if [[ "$_con_done$_dest_done$_src_done" != "(DONE)(DONE)(DONE)" ]]; then
            msgBox "rdiff action wizard" "You cannot create the configuration file until the other steps are completed."
          else
            do_rdiff_finish
            return
          fi
          ;;
    esac

  done
}

rdiff_wizard() {
  require_packages rdiff-backup
  _src_done=
  _dest_done=
  _con_done=
  _adv_done=
  rdiff_keep=60D
  rdiff_directory=/backup/`hostname`
  rdiff_user=
  rdiff_host=
  set -o noglob
  rdiff_includes=(/var/spool/cron/crontabs /var/backups /etc /root /home /usr/local/*bin /var/lib/dpkg/status*)
  rdiff_excludes=(/home/*/.gnupg)
  set +o noglob
  rdiff_main_menu
}

